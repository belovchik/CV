{
	"info": {
		"_postman_id": "82437fc1-290b-40fa-ae65-b9cdb80dcae0",
		"name": "Ilya Belove Petstore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17682538",
		"_collection_link": "https://www.postman.com/belovechik/workspace/ilya-belove-workspace/collection/17682538-82437fc1-290b-40fa-ae65-b9cdb80dcae0?action=share&creator=17682538&source=collection_link"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Add a New Pet to the Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Checking status available\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
									"pm.environment.set(\"pet name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"))\r",
									"pm.environment.set(\"petID\", pm.variables.replaceIn(\"{{$randomInt}}\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{petID}},\r\n  \"category\": {\r\n    \"id\": 10,\r\n    \"name\": \"dogs\"\r\n  },\r\n  \"name\": \"{{pet name}}\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"germany dog\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pet",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Uploads an Image",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "additionalMetadata",
									"value": "image",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/looka/Downloads/пикчрз/Сочи.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/pet/10/uploadImage",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"10",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find a pet by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/findByStatus?status=sold&status=available&status=pending",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "sold"
								},
								{
									"key": "status",
									"value": "available"
								},
								{
									"key": "status",
									"value": "pending"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find a Pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Checking status available\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql (\"available\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/{{petID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update a pet with fromdata",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Rainy",
									"type": "text"
								},
								{
									"key": "status",
									"value": "sold",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/pet/{{petID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an Existing Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Checking status available\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"pet name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"))\r",
									"pm.environment.set(\"petID\", pm.variables.replaceIn(\"{{$randomInt}}\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{petID}},\r\n  \"category\": {\r\n    \"id\": 10,\r\n    \"name\": \"dogs\"\r\n  },\r\n  \"name\": \"{{pet name}}\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"germany dog\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pet",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletes a Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "special-key",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/pet/{{petID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Place an Order for a Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Set variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"orderID\",jsonData.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"petId\": 0,\r\n  \"quantity\": 0,\r\n  \"shipDate\": \"2023-04-20T22:14:17.803Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/store/order",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Checking Status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"placed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Checking Complete\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.complete).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/store/order/{{orderID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"order",
								"{{orderID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Returns Pet Inventories by Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/store/inventory",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/store/order/{{orderID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"order",
								"{{orderID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.environment.set(\"username\", pm.variables.replaceIn(\"{{$randomFirstName}}\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 110,\r\n  \"username\": \"belove\",\r\n  \"firstName\": \"ilya\",\r\n  \"lastName\": \"belove\",\r\n  \"email\": \"belove@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/login?username=belove&password=123",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "belove"
								},
								{
									"key": "password",
									"value": "123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by Username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Checking of username\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"belove\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/{{username}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 110,\r\n  \"username\": \"belove1\",\r\n  \"firstName\": \"ilya\",\r\n  \"lastName\": \"belove\",\r\n  \"email\": \"belove@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/{{username}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create with Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n  \"id\": 111,\r\n  \"username\": \"belove1\",\r\n  \"firstName\": \"ilya1\",\r\n  \"lastName\": \"belove1\",\r\n  \"email\": \"belove1@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n  },\r\n{\r\n  \"id\": 112,\r\n  \"username\": \"belove2\",\r\n  \"firstName\": \"ilya2\",\r\n  \"lastName\": \"belove2\",\r\n  \"email\": \"belove2@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n},\r\n{\r\n  \"id\": 113,\r\n  \"username\": \"belove3\",\r\n  \"firstName\": \"ilya3\",\r\n  \"lastName\": \"belove3\",\r\n  \"email\": \"belove3@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/createWithArray",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"createWithArray"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create with List",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n  \"id\": 111,\r\n  \"username\": \"belove1\",\r\n  \"firstName\": \"ilya1\",\r\n  \"lastName\": \"belove1\",\r\n  \"email\": \"belove1@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n  },\r\n{\r\n  \"id\": 112,\r\n  \"username\": \"belove2\",\r\n  \"firstName\": \"ilya2\",\r\n  \"lastName\": \"belove2\",\r\n  \"email\": \"belove2@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n},\r\n{\r\n  \"id\": 113,\r\n  \"username\": \"belove3\",\r\n  \"firstName\": \"ilya3\",\r\n  \"lastName\": \"belove3\",\r\n  \"email\": \"belove3@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/createWithList",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"createWithList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/user/{{username}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Задание №1 Ilya Belove",
			"item": [
				{
					"name": "Deletes a Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "special-key",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/pet/{{petID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{petID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create with Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n  \"id\": 111,\r\n  \"username\": \"belove1\",\r\n  \"firstName\": \"ilya1\",\r\n  \"lastName\": \"belove1\",\r\n  \"email\": \"belove1@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n  },\r\n{\r\n  \"id\": 112,\r\n  \"username\": \"belove2\",\r\n  \"firstName\": \"ilya2\",\r\n  \"lastName\": \"belove2\",\r\n  \"email\": \"belove2@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n},\r\n{\r\n  \"id\": 113,\r\n  \"username\": \"belove3\",\r\n  \"firstName\": \"ilya3\",\r\n  \"lastName\": \"belove3\",\r\n  \"email\": \"belove3@test.com\",\r\n  \"password\": \"123\",\r\n  \"phone\": \"777\",\r\n  \"userStatus\": 0\r\n}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/createWithArray",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"createWithArray"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a New Pet to the Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Checking status available\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
									"pm.environment.set(\"pet name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"))\r",
									"pm.environment.set(\"petID\", pm.variables.replaceIn(\"{{$randomInt}}\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{petID}},\r\n  \"category\": {\r\n    \"id\": 10,\r\n    \"name\": \"dogs\"\r\n  },\r\n  \"name\": \"{{pet name}}\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"germany dog\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pet",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Задание №2 Ilya Belove SOAP",
			"item": [
				{
					"name": "Country Currency",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <Body>\r\n        <CountryCurrency xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\r\n            <sCountryISOCode>CAD</sCountryISOCode>\r\n        </CountryCurrency>\r\n    </Body>\r\n</Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
							"protocol": "http",
							"host": [
								"webservices",
								"oorsprong",
								"org"
							],
							"path": [
								"websamples.countryinfo",
								"CountryInfoService.wso"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Full Country Info",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <Body>\r\n        <FullCountryInfo xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\r\n            <sCountryISOCode>CAD</sCountryISOCode>\r\n        </FullCountryInfo>\r\n    </Body>\r\n</Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
							"protocol": "http",
							"host": [
								"webservices",
								"oorsprong",
								"org"
							],
							"path": [
								"websamples.countryinfo",
								"CountryInfoService.wso"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Country Language",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <Body>\r\n        <LanguageName xmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\r\n            <sISOCode>CAD</sISOCode>\r\n        </LanguageName>\r\n    </Body>\r\n</Envelope>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
							"protocol": "http",
							"host": [
								"webservices",
								"oorsprong",
								"org"
							],
							"path": [
								"websamples.countryinfo",
								"CountryInfoService.wso"
							],
							"query": [
								{
									"key": "WSDL",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}